<!DOCTYPE html>
<html lang="zh-tw">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Chatroom</title>
    <link rel="stylesheet" href="/stylesheets/inde.css" charset="utf-8">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io();
    </script>
</head>
<body>
    <div id="container">
        

        <div id="status-box">Server: <span id="status">-</span> / <span id="online">0</span> online.</div>
        <div id="content">
            
        </div>
        <input type="file" id="file">
        <i class="fa fa-picture-o" id="img"></i>
        
        <form action="/uploadPhoto" enctype="multipart/form-data" method="post">
            <input class="choose-file-btn" type="file" name="myImage"/>
            <input class="upload-btn" type="submit" value="Upload Photo" />
        </form>
        <div id="send-box">
            <form id="send-form">
                <input type="text" name="name" id="name" placeholder="暱稱">
                <input type="text" name="msg" id="msg" placeholder="說點什麼？">
                <input type="submit" value="送出">
            </form>
        </div>

        <div class="uploaded-images">
            <% images.forEach(function(image) { %>
                  <img class="image" src="data:image/<%=image.image.contentType%>;base64,<%=image.image.data.toString('base64')%>">
            <% }); %>
          </div>
          <div class="uploaded-images">
                  <img class="image" src="data:image/<%=images[0].image.contentType%>;base64,<%=images[0].image.data.toString('base64')%>">

          </div>
    </div>
 
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            
            var max_record;
            var status = document.getElementById("status");
            var online = document.getElementById("online");
            var sendForm = document.getElementById("send-form"); 
            var content = document.getElementById("content");
            var file = document.getElementById("file");
            
            var nameInputBox = document.getElementById("name");
            // var name = getCookie("name");
            
            if (name) {
                nameInputBox.value = name;
            }
            // 加入新的事件監聽器  
            socket.on("chatRecord", function (msgs) {
                for (var i=0; i < msgs.length; i++) {
                    (function () {
                        if(msgs[i].type == "img"){
                            console.log(msgs[i])
                            // addImgToBox(msgs[i])
                        }else{
                            addMsgToBox(msgs[i]);
                        }
                    })();
                }
            });
        
            socket.on("maxRecord", function (amount) {
                max_record = amount;
            });
            socket.on("connect", function () {
                status.innerText = "Connected.";
            });
            
            socket.on("msg",function (msg) {
                if(msg.type == "img"){
                            addImgToBox(msg)
                        }else{
                            addMsgToBox(msg)
                        }
            });

            // 新增兩個 function
            // 新增訊息到方框中
            function addMsgToBox (d) {
                var msgBox = document.createElement("div")
                msgBox.className = "msg";
                var nameBox = document.createElement("span");
                nameBox.className = "name";
                var name = document.createTextNode(d.name);
                var msg = document.createTextNode(d.msg);
         
                nameBox.appendChild(name);
                msgBox.appendChild(nameBox);
                msgBox.appendChild(msg);
                content.appendChild(msgBox);
        
                if (content.children.length > max_record) {
                    rmMsgFromBox();
                }
            }
        
            // 移除多餘的訊息
            function rmMsgFromBox () {
                var childs = content.children;
                childs[0].remove();
            }
        

            socket.on("disconnect", function () {
                status.innerText = "Disconnected.";
            });
 
            socket.on("online", function (amount) {
                online.innerText = amount;
            });

            // 接收消息 圖片
            
            function addImgToBox (msg) {
                var img = document.createElement("img");
                img.className = "img"
                img.src = "data:image/<%=images[0].image.contentType%>;base64,<%=images[0].image.data.toString('base64')%>"
                
                var nameBox = document.createElement("span");
                nameBox.className = "name";
                
                var name = document.createTextNode("sam");
                var msgBox = document.createElement("div")
                msgBox.className = "msg";
                nameBox.appendChild(name);
                msgBox.appendChild(nameBox);
                msgBox.appendChild(img);
                content.appendChild(msgBox);
            }
            socket.on('receiveMsg', (obj)=> { 
                console.log("receiveMsg")
                var img = document.createElement("img");
                img.className = "img"
                // img.src = obj.src;
                img.src = "data:image/<%=images[0].image.contentType%>;base64,<%=images[0].image.data.toString('base64')%>"
                
                var nameBox = document.createElement("span");
                nameBox.className = "name";
                
                var name = document.createTextNode("sam");
                var msgBox = document.createElement("div")
                msgBox.className = "msg";
                nameBox.appendChild(name);
                msgBox.appendChild(nameBox);
                msgBox.appendChild(img);
                content.appendChild(msgBox);
            });
            sendForm.addEventListener("submit", function (e) {
                e.preventDefault();
        
                var formData = {};
                var formChild = sendForm.children;
        
                for (var i=0; i< sendForm.childElementCount; i++) {
                    var child = formChild[i];
                    if (child.name !== "") {
                        formData[child.name] = child.value;
                    }
                }
                socket.emit("send", formData);
                setCookie("name", nameInputBox.value);
            });

            // 用户发送图片
            file.addEventListener("change",function(e){
                e.preventDefault();

                var file = this.files[0];  // 上传单张图片
                var reader = new FileReader();

                //文件读取出错的时候触发
                reader.onerror = function(){
                    console.log('读取文件失败，请重试！'); 
                };
                // 读取成功后
                reader.onload = function() {
                    var src = reader.result;  // 读取结果
                    socket.emit('sendMsg', {  // 发送
                        src: src,
                        type: 'img'  // 发送类型为img
                    }); 
                };
                reader.readAsDataURL(file); // 读取为64位
            })
            
        });
    </script>
</body>
</html>
 